{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXAO,SAASC,cAAc,SA4C/BC,iBAAiB,UA7BHC,IACjBA,EAAEC,iBACF,MAAMC,EAAkBL,SAASC,cAAc,uBACzCK,EAAaC,SAASF,EAAgBG,OACtCC,EAAiBT,SAASC,cAAc,sBACxCS,EAAYH,SAASE,EAAeD,OACpCG,EAAcX,SAASC,cAAc,wBACrCW,EAASL,SAASI,EAAYH,OAEpC,IAAK,IAAIK,EAAI,EAAGA,GAAKD,EAAQC,IAC3BtB,EAAcsB,EAAS,IAANA,EAAUP,EAAaA,EAAaI,GAAaG,EAAI,IACnEC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,OAExCyB,QAAQC,IAAI,uBAAqB3B,QAAiBC,MAAU,IAE7D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOK,QACd,sBAAoB7B,QAAiBC,OAEvCyB,QAAQC,IAAI,sBAAoB3B,QAAeC,MAAU,IAE1D6B,SAAQ,KACPJ,QAAQC,IAAI,UAAU,GACtB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst submitData = e => {\n  e.preventDefault();\n  const firstDelayInput = document.querySelector('input[name=\"delay\"]');\n  const firstDelay = parseInt(firstDelayInput.value);\n  const stepDelayinput = document.querySelector('input[name=\"step\"]');\n  const stepDelay = parseInt(stepDelayinput.value);\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, i === 1 ? firstDelay : firstDelay + stepDelay * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        console.log(`promise`);\n      });\n  }\n};\n\nform.addEventListener('submit', submitData);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","firstDelayInput","firstDelay","parseInt","value","stepDelayinput","stepDelay","amountInput","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","finally"],"version":3,"file":"03-promises.42798768.js.map"}